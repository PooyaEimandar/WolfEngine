syntax = "proto3";

package api.v1;

import "api/v1/stream.proto";
import "api/v1/user_info.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

option go_package = "gitlab.playpod.ir/alpha/backend/server-services-next/gen/go/api/v1;apiv1";

// UserStream is a message.
message UserStream {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: '{"is_admin":true,"stream":{"gif_url":"gif_url1","id":"00000000-0000-0000-0000-000000000001","match_id":"00000000-0000-0000-0000-000000000001","title":"title1"},"user_info":{"email":"email1","first_name":"first_name1","id":"00000000-0000-0000-0000-000000000001","last_name":"last_name1","locale":"en","picture":"picture1","private_metadata":"{\\"version\\":\\"1\\"}","public_metadata":"{\\"version\\":\\"1\\"}","status_tag_id":"00000000-0000-0000-0000-000000000002","username":"username1"}}',
    external_docs: {
      description: "Find out more about UserStream",
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A userStream",
      required: [],
      title: "UserStream Message",
    },
    read_only: true,
  };
  // Required. is_admin is a property.
  bool is_admin = 1 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The is_admin field."}
  ];
  // Required. stream is a property.
  Stream stream = 2 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The stream field."}
  ];
  // Required. user_info is a property.
  UserInfo user_info = 3 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The user_info field."}
  ];
}

// UserStreamServiceCreateRequest is a message.
message UserStreamServiceCreateRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: '{"is_admin":true,"stream_id":"00000000-0000-0000-0000-000000000002","user_id":"00000000-0000-0000-0000-000000000001"}',
    external_docs: {
      description: "Find out more about UserStreamServiceCreateRequest",
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A user stream service create request",
      required: [
        "is_admin",
        "stream_id",
        "user_id"
      ],
      title: "UserStreamServiceCreateRequest Message",
    },
    read_only: false,
  };
  // Required. is_admin is a property.
  bool is_admin = 1 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The is_admin field."}
  ];
  // Required. stream_id is a property.
  string stream_id = 2 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The stream_id field."},
    (validate.rules) = {
      string: {uuid: true}
    }
  ];
  // Required. user_id is a property.
  string user_id = 3 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The user_id field."},
    (validate.rules) = {
      string: {uuid: true}
    }
  ];
}

// UserStreamServiceCreateResponse is a message.
message UserStreamServiceCreateResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    external_docs: {
      description: "Find out more about UserStreamServiceCreateResponse",
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A user stream service create response",
      title: "UserStreamServiceCreateResponse Message",
    },
    read_only: true,
  };
}

// UserStreamServiceDeleteRequest is a message.
message UserStreamServiceDeleteRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: '{"stream_id":"00000000-0000-0000-0000-000000000001","user_id":"00000000-0000-0000-0000-000000000001"}',
    external_docs: {
      description: "Find out more about UserStreamServiceDeleteRequest",
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A user stream service delete request",
      required: [
        "stream_id",
        "user_id"
      ],
      title: "UserStreamServiceDeleteRequest Message",
    },
    read_only: false,
  };
  // Required. stream_id is a property.
  string stream_id = 1 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The stream_id field."},
    (validate.rules) = {
      string: {uuid: true}
    }
  ];
  // Required. user_id is a property.
  string user_id = 2 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The user_id field."},
    (validate.rules) = {
      string: {uuid: true}
    }
  ];
}

// UserStreamServiceDeleteResponse is a message.
message UserStreamServiceDeleteResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: '{"deleted_at":"2022-12-04T13:37:00.888824135Z"}',
    external_docs: {
      description: "Find out more about UserStreamServiceDeleteResponse",
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A user stream service delete response",
      title: "UserStreamServiceDeleteResponse Message",
    },
    read_only: true,
  };
  // deleted_at is a property.
  google.protobuf.Timestamp deleted_at = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The deleted_at field."}
  ];
}

// UserStreamServiceListRequest is a message.
message UserStreamServiceListRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: '{"page_token":"Cv-BBgEC_4QAAAAG_4IAAjEK","page_size":10,"user_id":"00000000-0000-0000-0000-000000000001","stream_id":"00000000-0000-0000-0000-000000000001"}',
    external_docs: {
      description: "Find out more about UserStreamServiceListRequest",
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A userStream service get list request",
      required: ["page_size"],
      title: "UserStreamServiceListRequest Message",
    },
    read_only: false,
  };
  // page_token is a property.
  string page_token = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The page_token field."},
    (validate.rules) = {
      string: {ignore_empty: true}
    }
  ];
  // Required. page_size is a property.
  uint32 page_size = 2 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The page_size field."},
    (validate.rules) = {
      uint32: {
        gt: 0,
        lt: 100
      }
    }
  ];
  // user_id is a property.
  string user_id = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The user_ids field."},
    (validate.rules) = {
      string: {
        ignore_empty: true,
        uuid: true
      }
    }
  ];
  // stream_id is a property.
  string stream_id = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The stream_ids field."},
    (validate.rules) = {
      string: {
        ignore_empty: true,
        uuid: true
      }
    }
  ];
}

// UserStreamServiceListResponse is a message.
message UserStreamServiceListResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: '{"next_page_token":"Cv-BBgEC_4QAAAAH_4IAAzExCg==","user_streams":{"is_admin":true,"stream":{"gif_url":"gif_url1","id":"00000000-0000-0000-0000-000000000001","match_id":"00000000-0000-0000-0000-000000000001","title":"title1"},"user_infos":[{"email":"email1","first_name":"first_name1","id":"00000000-0000-0000-0000-000000000001","last_name":"last_name1","locale":"en","picture":"picture1","private_metadata":"{\\"version\\":\\"1\\"}","public_metadata":"{\\"version\\":\\"1\\"}","status_tag_id":"00000000-0000-0000-0000-000000000002","username":"username1"}]}}',
    external_docs: {
      description: "Find out more about UserStreamServiceListResponse",
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A userStream service get list response",
      title: "UserStreamServiceListResponse Message",
    },
    read_only: true,
  };
  // next_page_token is a property.
  string next_page_token = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The next_page_token field."},
    (validate.rules) = {
      string: {ignore_empty: true}
    }
  ];
  // user_streams is a property.
  repeated UserStream user_streams = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The user_streams field."}
  ];
}

// UserStreamService is a service.
service UserStreamService {
  // Create is a rpc.
  rpc Create(UserStreamServiceCreateRequest) returns (UserStreamServiceCreateResponse) {
    option (google.api.http) = {
      body: "*",
      post: "/api/v1/userStreams",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {},
      },
    };
  }
  // Delete is a rpc.
  rpc Delete(UserStreamServiceDeleteRequest) returns (UserStreamServiceDeleteResponse) {
    option (google.api.http) = {delete: "/api/v1/userStreams/{user_id}/{stream_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {},
      },
    };
  }
  // List is a rpc.
  rpc List(UserStreamServiceListRequest) returns (UserStreamServiceListResponse) {
    option (google.api.http) = {get: "/api/v1/userStreams"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {},
      },
    };
  }
}
