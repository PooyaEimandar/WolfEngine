syntax = "proto3";

package api.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

option go_package = "gitlab.playpod.ir/alpha/backend/server-services-next/gen/go/api/v1;apiv1";

// Stream is a message.
message Stream {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: '{"gif_url":"gif_url1","id":"00000000-0000-0000-0000-000000000001","match_id":"00000000-0000-0000-0000-000000000001","title":"title1"}',
    external_docs: {
      description: "Find out more about Stream",
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A stream",
      required: [],
      title: "Stream Message",
    },
    read_only: true,
  };
  // Output only. gif_url is a property.
  string gif_url = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The gif_url field."},
    (validate.rules) = {
      string: {ignore_empty: true}
    }
  ];
  // Output only. id is a property.
  string id = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The id field."},
    (validate.rules) = {
      string: {uuid: true}
    }
  ];
  // Output only. match_id is a property.
  string match_id = 3 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The match_id field."},
    (validate.rules) = {
      string: {ignore_empty: true}
    }
  ];
  // Output only. title is a property.
  string title = 4 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The title field."},
    (validate.rules) = {
      string: {ignore_empty: true}
    }
  ];
}

// StreamServiceListRequest is a message.
message StreamServiceListRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: '{"page_token":"Cv-BBgEC_4QAAAAG_4IAAjEK","page_size":10,"radom":true,"title":"title"}',
    external_docs: {
      description: "Find out more about StreamServiceListRequest",
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A stream service get list request",
      required: ["page_size"],
      title: "StreamServiceListRequest Message",
    },
    read_only: false,
  };
  // page_token is a property.
  string page_token = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The page_token field."},
    (validate.rules) = {
      string: {ignore_empty: true}
    }
  ];
  // Required. page_size is a property.
  uint32 page_size = 2 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The page_size field."},
    (validate.rules) = {
      uint32: {
        gt: 0,
        lt: 100
      }
    }
  ];
  // random is a property.
  bool random = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The random field."}
  ];
  // title is a property.
  string title = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The title field."},
    (validate.rules) = {
      string: {
        ignore_empty: true,
        min_len: 3
      }
    }
  ];
}

// StreamServiceListResponse is a message.
message StreamServiceListResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: '{"next_page_token":"Cv-BBgEC_4QAAAAH_4IAAzExCg==","streams":[{"gif_url":"gif_url1","id":"00000000-0000-0000-0000-000000000001","match_id":"00000000-0000-0000-0000-000000000001","title":"title1"}]}',
    external_docs: {
      description: "Find out more about StreamServiceListResponse",
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A stream service get list response",
      title: "StreamServiceListResponse Message",
    },
    read_only: true,
  };
  // next_page_token is a property.
  string next_page_token = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The next_page_token field."},
    (validate.rules) = {
      string: {ignore_empty: true}
    }
  ];
  // streams is a property.
  repeated Stream streams = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The streams field."}
  ];
}

// StreamService is a service.
service StreamService {
  // List is a rpc.
  rpc List(StreamServiceListRequest) returns (StreamServiceListResponse) {
    option (google.api.http) = {get: "/api/v1/streams"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {},
      },
    };
  }
}
