syntax = "proto3";

package api.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

option go_package = "gitlab.playpod.ir/alpha/backend/server-services-next/gen/go/api/v1;apiv1";

// Tag is a message.
message Tag {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: '{"alt_url":"alt_url1","icon_url":"icon_url1","id":"00000000-0000-0000-0000-000000000001","tag_types":["tag_type1","tag_type2"],"title":"title1","paren_id":"00000000-0000-0000-0000-000000000001"}',
    external_docs: {
      description: "Find out more about Tag";
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A tag"
      title: "Tag Message",
    },
    read_only: true,
  };
  // Output only. alt_url is a property.
  string alt_url = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The alt_url type field."},
    (validate.rules) = {
      string: {ignore_empty: true}
    }
  ];
  // Output only. icon_url is a property.
  string icon_url = 3 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The icon_url type field."},
    (validate.rules) = {
      string: {ignore_empty: true}
    }
  ];
  // Output only. id is a property.
  string id = 4 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The id type field."},
    (validate.rules) = {
      string: {uuid: true}
    }
  ];
  // tag_types is a property.
  repeated string tag_types = 5 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The tag_types field."}
  ];
  // Output only. title is a property.
  string title = 6 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The title field."},
    (validate.rules) = {
      string: {ignore_empty: true}
    }
  ];
  // Output only. parent_id is a property.
  string parent_id = 7 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The parent_id field."},
    (validate.rules) = {
      string: {uuid: true}
    }
  ];
}

// TagServiceListRequest is a message.
message TagServiceListRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: '{"page_token":"Cv-BBgEC_4QAAAAG_4IAAjEK","page_size":10,"tag_types":["tag_type1","tag_type2"],"tag_types_with_children":["tag_type1","tag_type2"],"title":"title1"}',
    external_docs: {
      description: "Find out more about TagServiceListRequest",
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A tag service get list request",
      required: ["page_size"],
      title: "TagServiceListRequest Message",
    },
    read_only: false,
  };
  // page_token is a property.
  string page_token = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The page_token field."},
    (validate.rules) = {
      string: {ignore_empty: true}
    }
  ];
  // Required. page_size is a property.
  uint32 page_size = 2 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The page_size field."},
    (validate.rules) = {
      uint32: {
        gt: 0,
        lt: 100
      }
    }
  ];
  // tag_types is a property.
  repeated string tag_types = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The tag_types field."},
    (validate.rules) = {
      repeated: {
        ignore_empty: true,
        unique: true
      }
    }
  ];
  // tag_types_with_children is a property.
  repeated string tag_types_with_children = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The tag_types_with_children field."},
    (validate.rules) = {
      repeated: {
        ignore_empty: true,
        unique: true
      }
    }
  ];
  // title is a property.
  string title = 5 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The title field."},
    (validate.rules) = {
      string: {
        ignore_empty: true,
        min_len: 3
      }
    }
  ];
}

// TagServiceListResponse is a message.
message TagServiceListResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: '{"next_page_token":"Cv-BBgEC_4QAAAAH_4IAAzExCg==","tags":[{"alt_url":"alt_url1","icon_url":"icon_url1","id":"00000000-0000-0000-0000-000000000001","priority":0,"redirect_url":"redirect_url1","tag_types":["tag_type1","tag_type2"],"title":"title1","parent_id":"00000000-0000-0000-0000-000000000001"}]}'
    external_docs: {
      description: "Find out more about TagServiceListResponse",
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A tag service get list response",
      title: "TagServiceListResponse Message",
    },
    read_only: true,
  };
  // next_page_token is a property.
  string next_page_token = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The next_page_token field."},
    (validate.rules) = {
      string: {ignore_empty: true}
    }
  ];
  // tags is a property.
  repeated Tag tags = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The tags field."}
  ];
}

// TagService is a service.
service TagService {
  // List is a rpc.
  rpc List(TagServiceListRequest) returns (TagServiceListResponse) {
    option (google.api.http) = {get: "/api/v1/tags"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {},
      },
    };
  }
}
