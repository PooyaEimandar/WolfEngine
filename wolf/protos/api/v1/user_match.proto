syntax = "proto3";

package api.v1;

import "api/v1/match.proto";
import "api/v1/user_info.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

option go_package = "gitlab.playpod.ir/alpha/backend/server-services-next/gen/go/api/v1;apiv1";

// UserMatch is a message.
message UserMatch {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: '{"match":{"cancel_reason":"cancel_reason1","current_viewers":1,"end_time":"0001-01-01T00:00:00Z","game_id":"00000000-0000-0000-0000-000000000001","id":"00000000-0000-0000-0000-000000000001","live_time":"0001-01-01T00:00:00Z","result":1,"result_datail":"result_datail","start_time":"0001-01-01T00:00:00Z","state_tag_id":"100000000-0000-0000-0000-000000000001","total_viewers":1,"urn_id":"urn_id1"}, "user_info":{"about":"about1","banner_url":"banner_url1","developer":"developer1","download_url":"download_url1","icon_url":"icon_url1","id":"00000000-0000-0000-0000-000000000001","is_pro":true,"max_players":1,"min_players":1,"number_of_plays":1,"price":1.0,"publisher":"publisher1","release_time":"1970-01-01T00:00:01Z","title":"title1"}}',
    external_docs: {
      description: "Find out more about UserMatch",
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A userMatch",
      required: [],
      title: "UserMatch Message",
    },
    read_only: true,
  };
  // match is a property.
  Match match = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The match field."}
  ];
  // user_info is a property.
  UserInfo user_info = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The user_info field."}
  ];
}

// UserMatchServiceCreateRequest is a message.
message UserMatchServiceCreateRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: '{"user_id": "00000000-0000-0000-0000-000000000003","match_id": "00000000-0000-0000-0000-000000000001"}',
    external_docs: {
      description: "Find out more about UserMatchServiceCreateRequest",
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A user match service create request",
      required: [
        "user_id",
        "match_id"
      ],
      title: "UserMatchServiceCreateRequest Message",
    },
    read_only: false,
  };
  // Required. match_id is a property.
  string match_id = 1 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The match_id field."},
    (validate.rules) = {
      string: {uuid: true}
    }
  ];
  // Required. user_id is a property.
  string user_id = 2 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The user_id field."},
    (validate.rules) = {
      string: {uuid: true}
    }
  ];
}

// UserMatchServiceCreateResponse is a message.
message UserMatchServiceCreateResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    external_docs: {
      description: "Find out more about UserMatchServiceCreateResponse",
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A user match service create response",
      title: "UserMatchServiceCreateResponse Message",
    },
    read_only: true,
  };
}

// UserMatchServiceDeleteRequest is a message.
message UserMatchServiceDeleteRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: '{"user_id":"00000000-0000-0000-0000-000000000001","match_id":"00000000-0000-0000-0000-000000000001"}',
    external_docs: {
      description: "Find out more about UserMatchServiceDeleteRequest",
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A user match service delete request",
      required: [
        "user_id",
        "match_id"
      ],
      title: "UserMatchServiceDeleteRequest Message",
    },
    read_only: false,
  };
  // Required. match_id is a property.
  string match_id = 1 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The match_id field."},
    (validate.rules) = {
      string: {uuid: true}
    }
  ];
  // Required. user_id is a property.
  string user_id = 2 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The user_id field."},
    (validate.rules) = {
      string: {uuid: true}
    }
  ];
}

// UserMatchServiceDeleteResponse is a message.
message UserMatchServiceDeleteResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: '{"deleted_at":"2022-12-04T13:37:00.888824135Z"}',
    external_docs: {
      description: "Find out more about UserMatchServiceDeleteResponse",
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A user match service delete response",
      title: "UserMatchServiceDeleteResponse Message",
    },
    read_only: true,
  };
  // deleted_at is a property.
  google.protobuf.Timestamp deleted_at = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The deleted_at field."}
  ];
}

// UserMatchServiceListRequest is a message.
message UserMatchServiceListRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: '{"page_token":"Cv-BBgEC_4QAAAAG_4IAAjEK","page_size":10,"user_id":"00000000-0000-0000-0000-000000000001","match_id":"00000000-0000-0000-0000-000000000001"}',
    external_docs: {
      description: "Find out more about UserMatchServiceListRequest",
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A userMatch service get list request",
      required: ["page_size"],
      title: "UserMatchServiceListRequest Message",
    },
    read_only: false,
  };
  // page_token is a property.
  string page_token = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The page_token field."},
    (validate.rules) = {
      string: {ignore_empty: true}
    }
  ];
  // Required. page_size is a property.
  uint32 page_size = 2 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The page_size field."},
    (validate.rules) = {
      uint32: {
        gt: 0,
        lt: 100
      }
    }
  ];
  // match_id is a property.
  string match_id = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The match_id field."},
    (validate.rules) = {
      string: {
        ignore_empty: true,
        uuid: true
      }
    }
  ];
  // user_id is a property.
  string user_id = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The user_id field."},
    (validate.rules) = {
      string: {
        ignore_empty: true,
        uuid: true
      }
    }
  ];
}

// UserMatchServiceListResponse is a message.
message UserMatchServiceListResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: '{"next_page_token":"Cv-BBgEC_4QAAAAH_4IAAzExCg==","user_matches":{"user_info":{"about":"about1","banner_url":"banner_url1","developer":"developer1","download_url":"download_url1","icon_url":"icon_url1","id":"00000000-0000-0000-0000-000000000001","is_pro":true,"max_players":1,"min_players":1,"number_of_plays":1,"price":1.0,"publisher":"publisher1","release_time":"1970-01-01T00:00:01Z","title":"title1"},"match":{"cancel_reason":"cancel_reason1","current_viewers":1,"end_time":"0001-01-01T00:00:00Z","game_id":"00000000-0000-0000-0000-000000000001","id":"00000000-0000-0000-0000-000000000001","live_time":"0001-01-01T00:00:00Z","result":1,"result_datail":"result_datail","start_time":"0001-01-01T00:00:00Z","state_tag_id":"100000000-0000-0000-0000-000000000001","total_viewers":1,"urn_id":"urn_id1"}}}',
    external_docs: {
      description: "Find out more about UserMatchServiceListResponse",
      url: "https://gitlab.playpod.ir/alpha/backend/server-services-next",
    },
    json_schema: {
      description: "A userMatch service get list response",
      title: "UserMatchServiceListResponse Message",
    },
    read_only: true,
  };
  // next_page_token is a property.
  string next_page_token = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The next_page_token field."},
    (validate.rules) = {
      string: {ignore_empty: true}
    }
  ];
  // user_matches is a property.
  repeated UserMatch user_matches = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The user_matches field."}
  ];
}

// UserMatchService is a service.
service UserMatchService {
  // Create is a rpc.
  rpc Create(UserMatchServiceCreateRequest) returns (UserMatchServiceCreateResponse) {
    option (google.api.http) = {
      body: "*",
      post: "/api/v1/userMatches",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {},
      },
    };
  }
  // Delete is a rpc.
  rpc Delete(UserMatchServiceDeleteRequest) returns (UserMatchServiceDeleteResponse) {
    option (google.api.http) = {delete: "/api/v1/userMatches/{user_id}/{match_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {},
      },
    };
  }
  // List is a rpc.
  rpc List(UserMatchServiceListRequest) returns (UserMatchServiceListResponse) {
    option (google.api.http) = {get: "/api/v1/userMatches"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {},
      },
    };
  }
}
