[package]
categories = ["game-development", "game-engines", "games", "graphics", "multimedia"]
description = "Wolf is a set of modules for realtime rendering, realtime streaming and game developing"
edition = "2021"
keywords = ["gamedev", "system", "gamedev", "render"]
license = "Apache-2.0"
name = "wolfengine"
readme = "README.md"
repository = "https://github.com/WolfEngine/WolfEngine/"
version = "3.0.3"

[lib]
crate-type = ["rlib", "cdylib"]
name = "wolf"
path = "src/lib.rs"

# before adding any dependency please check it out from
# https://android.googlesource.com/platform/external/rust/crates/

# shared dependencies between all
[dependencies]
#brotli = { version = "3.3.3" }
anyhow = {version = "1.0.56", default-features = false}
cfg-if = { version = "1.0.0", default-features = false}
signals2 = {version = "0.3.2", default-features = false}
raw-window-handle = {version = "0.4.3", default-features = false, features = ["alloc"]} 

# dependencies of wasm 
[target.'cfg(target_arch = "wasm32")'.dependencies]
instant = {version = "0.1.12", default-features = false, features = ["wasm-bindgen"]}
rhai = { version = "1.6.1", default-features = false, features = ["sync", "internals", "wasm-bindgen"] }
serde = { version = "1.0.136", default-features = false, features = ["derive"]}
wasm-bindgen = { version = "0.2.80", default-features = false }
wasm-bindgen-futures = { version = "0.4.30", default-features = false }
wasm-mt = {version = "0.1.2", default-features = false }
web-sys = {version = "0.3.57", default-features = false, features = ["console", "Document", "Window", "Element"]}
wgpu = {version = "0.12.0", default-features = false, features = ["webgl"]}

# shared dependencies between arm, aarch64 & x86_64
[target.'cfg(any(target_arch = "arm", target_arch = "aarch64", target_arch = "x86_64"))'.dependencies]
instant = {version = "0.1.12", default-features = false}
cxx = {version = "1.0.67", default-features = false, features = ["alloc", "c++20"]}
pollster = {version = "0.2.5", default-features = false}
rhai = { version = "1.6.0", default-features = false, features = ["sync", "internals"]}
rustls-pemfile = {version = "1.0.0", default-features = false}
tokio = {version = "1.17.0", default-features = false, features = ["full"]}
tokio-rustls = {version = "0.23.3", default-features = false, features = ["logging", "tls12"]}
tonic = {version = "0.7.1", default-features = false, features = ["codegen", "prost", "tls", "compression"]}
webpki-roots = {version = "0.22.3", default-features = false}
wgpu = {version = "0.12.0", default-features = false}

# dependencies of arm, aarch64
# [target.'cfg(any(target_arch = "arm", target_arch = "aarch64"))'.dependencies]

# dependencies of x86_64
[target.'cfg(target_arch = "x86_64")'.dependencies]
# #scylla = {default-features = false, features = ["ssl"], version = "0.4.3"}
async-raft = {version = "0.6.1", default-features = false}
async-trait = {version = "0.1.53", default-features = false}
futures = { version = "0.3.21", default-features = false }
hyper = {version = "0.14.18", default-features = false}
may = {version = "0.3.21", default-features = false}
memstore = {version = "0.2.0", default-features = false}
mimalloc = {version = "0.1.28", default-features = false, features = ["secure"]}
parking_lot = {version = "0.12.0",  default-features = false, features = ["deadlock_detection"]}
prost = {version = "0.10.1", default-features = false}
serde_json = {version = "1.0.79", default-features = false, features = ["std"]}
sysinfo = {version = "0.23.10", default-features = false, features = ["multithread"]}
tracing = {version = "0.1.34", default-features = false, features = ["std", "attributes"]}
tokio-tungstenite = {version = "0.17.1", default-features = false, features = ["connect", "rustls"]}
uuid = {version = "1.0.0", default-features = false, features = ["v5"]}

[build-dependencies]
cfg-if = { version = "1.0.0", default-features = false}
cxx-build = {version = "1.0.67", default-features = false}
tonic-build = {version = "0.7.1", default-features = false, features = ["transport", "prost", "compression"]}

[dev-dependencies]
lazy_static = {version = "1.4.0", default-features = false}

# Wasm features
[features]
default = ["system", "lz4"]
brotli = [] # enable brotli compression
fiber = [] # enable fiber
grpc = [] # enable gRPC connection
http_client = [] # enable http 1.1/2 client
http_server = [] # enable http 1.1/2 server
kafka_client = [] # enable Kafka client
lz4 = [] # enable LZ4 compression
lzma = [] # enable LZMA Compression
nng = [] # enable nng socket for tcp/udp/ipc protocols
quic = [] # enable QUIC protocol
redis_client = [] # enable redis client
render = [] # enable real-time rendering
rocksDB_client = [] # enable rocksDB client
rtsp_client = [] # enable real time streaming protocol for client
rtsp_server = [] # enable real time streaming protocol for server
script = [] # enable embedded script engine
simd = [] # enable SIMD
skyllaDB_client = [] # enable ScyllaDB client
socket = [] # enable native socket for tcp/udp protocols
system = [] # base system features
#wasm = [] # build wolf for WASM. Remove this in order to native local debuging for tests
webRTC_client = [] # enable webRTC
websocket_client = [] # enable websocket client
websocket_server = [] # enable websocket server


