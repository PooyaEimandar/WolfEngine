[package]
categories = ["game-development", "game-engines", "games", "graphics", "multimedia"]
description = "Wolf is a set of modules for realtime rendering, realtime streaming and game developing"
edition = "2021"
keywords = ["gamedev", "system", "gamedev", "render"]
license = "Apache-2.0"
name = "wolfengine"
readme = "README.md"
repository = "https://github.com/WolfEngine/WolfEngine/"
version = "3.0.3"

[lib]
crate-type = ["rlib", "cdylib"]
name = "wolf"
path = "src/lib.rs"

# before adding any dependency please check it out from
# https://android.googlesource.com/platform/external/rust/crates/

# shared dependencies between all
[dependencies]
thiserror = {version = "1.0.38", default-features = false}
raw-window-handle = {version = "0.5.0", default-features = false, features = ["alloc"]} 
signals2 = {version = "0.3.2", default-features = false}
tracing = {version = "0.1.37", default-features = false, features = ["std", "attributes"]}

# dependencies of windows x64
[target.'cfg(any(target_os = "windows", target_arch = "x86_64"))'.dependencies]
windows-sys = {version = "0.45.0", default-features = false, features = ["Win32_UI_Input_XboxController"]}

# dependencies of wasm 
[target.'cfg(target_arch = "wasm32")'.dependencies]
instant = {version = "0.1.12", default-features = false, features = ["wasm-bindgen"]}
rhai = { version = "1.12.0", default-features = false, features = ["sync", "internals", "wasm-bindgen"], optional = true }
serde = { version = "1.0.152", default-features = false, features = ["derive"]}
wasm-bindgen = { version = "0.2.84" }
wasm-bindgen-futures = { version = "0.4.34", default-features = false }
wasm-mt = {version = "0.1.3", default-features = false }
web-sys = {version = "0.3.61", default-features = false, features = ["console", "Document", "Window", "Element"]}
#wgpu = {version = "0.15.1", default-features = false, features = ["webgl"], optional = true}

# shared dependencies between arm, aarch64 & x86_64
[target.'cfg(any(target_arch = "arm", target_arch = "aarch64", target_arch = "x86_64"))'.dependencies]
instant = {version = "0.1.12", default-features = false}
pollster = {version = "0.3.0", default-features = false}
rhai = { version = "1.12.0", default-features = false, features = ["sync", "internals"], optional = true}
rustls-pemfile = {version = "1.0.2", default-features = false}
tokio = {version = "1.25.0", default-features = false, features = ["full"]}
tokio-rustls = {version = "0.23.4", default-features = false, features = ["logging", "tls12"]}
tonic = {version = "0.8.3", default-features = false, features = ["codegen", "prost", "tls", "gzip"], optional = true}
webpki-roots = {version = "0.22.6", default-features = false}
#wgpu = {version = "0.15.1", default-features = false, optional = true}

# dependencies of arm, aarch64
# [target.'cfg(any(target_arch = "arm", target_arch = "aarch64"))'.dependencies]

# dependencies of x86_64
[target.'cfg(target_arch = "x86_64")'.dependencies]
async-raft = {version = "0.6.1", default-features = false, optional = true}
async-trait = {version = "0.1.64", default-features = false}
futures = { version = "0.3.26", default-features = false }
hyper = {version = "0.14.24", default-features = false}
may = {version = "0.3.38", default-features = false, optional = true}
memstore = {version = "0.2.0", default-features = false}
mimalloc = {version = "0.1.34", default-features = false, features = ["secure"]}
parking_lot = {version = "0.12.1",  default-features = false, features = ["deadlock_detection"]}
prost = {version = "0.11.6", default-features = false, optional = true}
scrap ={version = "0.5.0", default-features = false, optional = true}
serde_json = {version = "1.0.93", default-features = false, features = ["std"]}
sysinfo = {version = "0.27.7", default-features = false, features = ["multithread"]}
tokio-tungstenite = {version = "0.18.0", default-features = false, features = ["connect", "rustls"], optional = true}
uuid = {version = "1.3.0", default-features = false, features = ["v5"]}

[build-dependencies]
bindgen = { version = "0.64.0" }
tonic-build = {version = "0.8.4", default-features = false, features = ["transport", "prost"]}

[dev-dependencies]
image = {version ="0.24.5", default-features = false, features = ["jpeg", "png", "rgb"]}
lazy_static = {version = "1.4.0", default-features = false}
wav = {version = "1.0.0", default-features = false }

# features
[features]
all = [
#     "media_ffmpeg",
#     "media_openal",
#     "render",
     "stream_grpc",
#     "stream_rist",
#     "stream_socket_client",
#     "stream_socket_server",
#     "system_fiber",
    "system_gamepad_virtual",
    "system_js",
    "system_lz4",
    #"system_lzma",
    #"system_raft",
#     "system_screen_capture",
]
# github_action = [
#     "render",
#     "stream_socket_client",
#     "stream_socket_server",
#     "system_fiber",
#     "system_gamepad_virtual",
#     "system_js",
#     "system_lz4",
#     "system_lzma",
#     "system_screen_capture",
# ]
default = ["all"]
# media_ffmpeg = [] # enable ffmpeg
# media_openal = [] # enable openal
# render = ["wgpu"] # enable real-time rendering
stream_grpc = ["tonic", "prost"] # enable gRPC (http2/1.1) for stream module
# stream_rist = [] # enable RIST streaming protocol for stream module
# stream_socket_client = ["tokio-tungstenite"] # enable tcp/udp/ws server for stream module
# stream_socket_server = ["tokio-tungstenite"] # enable tcp/udp/ws client for stream module
# system_fiber = ["may"] # enable fiber
system_gamepad_virtual = [] # enable gamepad virtual simulator 
system_js = [] # enable javascript embedded engine for system module
system_lz4 = [] # enable LZ4 compression for system module
# system_lzma = [] # enable LZMA compression for system module
system_raft = ["async-raft", "prost", "stream_grpc"] # enable raft algorithm for system module
# system_screen_capture = ["scrap"] # enable screen capture

# brotli = [] # enable brotli compression
# kafka_client = [] # enable Kafka client
# lzma = [] # enable LZMA Compression
# quic = [] # enable QUIC protocol
# redis_client = [] # enable redis client
# rocksDB_client = [] # enable rocksDB client
# simd = [] # enable SIMD
# webRTC_client = [] # enable webRTC


